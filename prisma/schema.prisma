// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  name         String?
  password     String
  refreshToken String?
  roles        Role[]        @default([])
  projects     Project[]     @relation("UserProjects")
  ProjectUser  ProjectUser[]
  userResults  UserResult[]
}

enum Role {
  ADMIN
  TEACHER
  USER
}

model Project {
  id          Int           @id @default(autoincrement())
  users       User[]        @relation("UserProjects")
  blocks      Json?
  isPublic    Boolean       @default(false)
  createdBy   Int?
  ProjectUser ProjectUser[]
  results     UserResult[]
}

model ProjectUser {
  userId     Int
  projectId  Int
  user       User     @relation(fields: [userId], references: [id])
  project    Project  @relation(fields: [projectId], references: [id])
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([userId, projectId])
}

model UserResult {
  id        Int      @id @default(autoincrement())
  userId    Int
  projectId Int
  user      User     @relation(fields: [userId], references: [id])
  project   Project  @relation(fields: [projectId], references: [id])
  data      Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, projectId])
}
